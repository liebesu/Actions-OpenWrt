#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================

name: LEDE云编译(all插件)多线程-liebesu

on: 
  release:
    types: [published]
  push:
    branches: 
      - master
    paths:
      - 'all.config'
  schedule:
    - cron: 0 21 * * *
  watch:
    types: [started]

jobs:
  build:
    runs-on: ubuntu-18.04
    if: github.event.repository.owner.id == github.event.sender.id
    steps:
    - name: 查看
      uses: actions/checkout@master

    - name: 初始化环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        echo "Deleting files, please wait ..."
        sudo rm -rf /usr/share/dotnet /etc/apt/sources.list.d/*
        sudo swapoff /swapfile
        sudo rm -f /swapfile
        #docker rmi `docker images -q`
        #sudo -E apt-get -q purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        #curl -fsSL https://raw.githubusercontent.com/P3TERX/dotfiles/master/.bashrc >> ~/.bashrc
        sudo ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime

    - name: 克隆源代码
      env: 
        REPO_URL: https://github.com/coolsnowwolf/lede
        REPO_BRANCH: master
      run: git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
      
    - name: 更新
      run: cd openwrt && git pull
      
    - name: 下载软件更新
      run: cd openwrt && ./scripts/feeds update -a

    - name: 安装软件更新
      run: cd openwrt && ./scripts/feeds install -a

    - name: 加载自定义配置
      env:
        CONFIG_FILE: 'all.config'
        DIY_SH: 'diy.sh'
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_SH
        cd openwrt
        ../$DIY_SH
        make defconfig

    #- name: SSH connection to Actions
    #  uses: P3TERX/debugger-action@master

    - name: 下载包
      run: |
        cd openwrt && make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: 多线程编译
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc)

    #- name: 单线程编译
     # if: failure()
      #run: |
       # cd openwrt
        #make -j1 V=s

    - name: 上载bin目录
      uses: actions/upload-artifact@master
      if: always()
      with:
        name: OpenWrt_bin_all
        path: openwrt/bin

    - name: 整理档案
      if: always()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "::set-env name=FIRMWARE::$(pwd)"

    - name: 上载固件
      uses: actions/upload-artifact@master
      if: always()
      with:
        name: OpenWrt_firmware_all
        path: ${{ env.FIRMWARE }}

    - name: 报告电报
      uses: screendriver/ifttt-action@v1.0.0
      with:
       event: github_actions
       key: p96FfuW3aG5CdY2VXUIIczPoERN5si6-jzhd6T505IQ

    
